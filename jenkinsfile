pipeline {
  agent {
    label 'AGENT-1'
  }

  options {
    timeout(time: 30, unit: 'MINUTES')
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  parameters {
    choice(name: 'action', choices: ['Apply', 'Destroy'], description: 'Pick something')
  }

  stages {
    stage('Init') {
      when{
        expression{ params.action == 'Apply' }
      }
      steps {
        sh '''
          cd 01-vpc
          terraform init -reconfigure
        ''' 
      }
    }

    stage('Plan') {
      when{
        expression{ params.action == 'Apply' }
      }
      steps {
        sh '''
          cd 01-vpc
          terraform plan
        '''
      }
    }

    stage('Deploy') {
      when {
        expression { params.action == 'Apply' }
      }
      input {
        message "Should we continue?"
        ok "Yes, Continue."
      }
      steps {
        sh '''
          cd 01-vpc
          terraform apply -auto-approve
        '''
      }
    }

    stage('Destroy') {
      when {
        expression { params.action == 'Destroy' }
      }
      input {
        message "Are you sure you want to destroy?"
        ok "Yes, Destroy It."
      }
      steps {
        sh '''
          cd 01-vpc
          terraform destroy -auto-approve
        '''
      }
    }
  }

  post {
    always {
      deleteDir()
    }
  }
}